@model LabSystem2.ViewModels.CartViewModel
@using LabSystem2.Infrastructure


@{
    ViewBag.Title = "Zlecenie cz.1";
}


<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#GenreId").change(function () {
            $.get("/OrderItems/GetProductsByCategoryId", { GenreId: $("#GenreId").val() }, function (data) {
                $("#ProductId").empty();
                $.each(data, function (index, row) {
                    $("#ProductId").append("<option value='" + row.ProductId + "'>" + row.ProductTitle + "</option>")

                });
            });
        })
    });
</script>
<script type="text/javascript">
    function myFunction(e) {
        var Idproduct = $(e).val();  //get selected value
        if (Idproduct != "") {
            $.ajax({
                type: "Post",
                url: "@Url.Action("AddToCart", "Cart")",
                data: { id: Idproduct },
                success: function (response) {
                    $("#ProductId").val(response);
                },
                error: function (error) {
                    alert(error);
                }
            });
        }
        else {
        }
    };
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Zlecenie badań</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.GenreId, "GenreId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("GenreId", ViewBag.GenreList as SelectList, "--- Przedmiot badań ---", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GenreId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ProductId, "ProductId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ProductId", new SelectList(" "), htmlAttributes: new { @class = "form-control", @onchange = " myFunction(this)" })
            @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <p class="btn btn-default">
                @Html.ActionLink("Odśwież", "Index", "Cart")
            </p>
        </div>
    </div>
</div>


}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@using (Html.BeginForm())
{
    @*All lines from <h3> tag to end are inside here*@

    <div id="productlist-content">

        <div id="productlist-rightsection">
            <div id="breadcrumb-section">
                <img src="../Content/Images/home-small.png" />
                @Html.MvcSiteMap().SiteMapPath()
            </div>
            <div id="update-message"></div>
            <div>
                @for (int i = 0; i < Model.Quantity; i++)
                {
                    <p>
                        @Html.ValidationMessageFor(model => model.CartItems[i].Quantity)
                    </p>
                }
            </div>
            <section class="content-section">
                <table class="table">
                    @{int ix = 0;}
                    @foreach (var cartItem in Model.CartItems)
                    {
                        <tr id="cart-row-@cartItem.Product.ProductId">
                            <td><a href="@Url.Action("Details", "Products", new { id = cartItem.Product.ProductId })">@cartItem.Product.ProductTitle</a></td>
                            <td>@String.Format("{0:0.##}", cartItem.TotalPrice) zł</td>
                            <td>Ilość prób: <span id="cart-item-count-@cartItem.Product.ProductId"></span></td>
                            <td>
                                @Html.TextBoxFor(model => model.CartItems[ix].Quantity,
                                      new { style = "width:25px; text-align:right;",
                                          onkeyup = "clearUpdateMessage();",
                                          onchange = "clearUpdateMessage();"
                                      })
                            </td>
                            <td>@String.Format("{0:0.##}", cartItem.UnitPrice) zł</td>
                            <td><a class="RefreshQuantity" data-id="@cartItem.Product.ProductId" href="#" txt-id="CartItems_@(ix)__Quantity">Odśwież</a>&nbsp;|&nbsp;</td>
                            <td><a class="removeProduct" data-id="@cartItem.Product.ProductId" href="#">Usuń</a></td>

                        </tr>

                    }
                    <tr id="cart-empty-message" @if (Model.CartItems != null && Model.CartItems.Count > 0) { <text> class="hidden" </text> }>
                        <td>Brak dodanych produktów</td>
                    </tr>
                </table>

                <div id="total-price">
                    Razem: <span id="total-price-value">@String.Format("{0:0.##}", Model.TotalPrice)</span> zł
                </div>

                <div class="section-button-container">
                    <p class="btn btn-default">@Html.ActionLink("Dodaj Zlecenie", "Create", "OrderItems")</p>
                    @if (Model.TotalPrice > 0)
                    {
                        <a class="btn btn-default" id="cart-button-checkout" href="@Url.Action("Checkout", "Cart")">Dodaj Klienta</a>
                    }
                </div>
            </section>

        </div>
    </div>
}
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script type="text/javascript">

    $(function () {
        $(".removeProduct").click(function () {

            var recordToDelete = $(this).attr("data-id");

            if (recordToDelete != '') {

                // Send post request with AJAX
                $.post("/Cart/RemoveFromCart", { "productID": recordToDelete },
                    function (response) {
                        // Success
                        //if (response.RemovedItemCount == 0) {

                        $('#cart-row-' + response.RemoveItemId).fadeOut('slow', function () {
                            if (response.CartItemsCount == 0) {
                                $("#cart-empty-message").removeClass("hidden");
                            }
                        });
                        //} else {
                        //    $('#cart-item-count-' + response.RemoveItemId).text(response.RemovedItemCount);
                        // }
                        if (response.CartItemsCount == 0) {
                            $('#cart-button-checkout').addClass('hidden');
                            $('#total-price').addClass('invisible');
                        }

                        $('#total-price-value').text(response.CartTotal);
                        $('#cart-header-items-count').text(response.CartItemsCount);


                    });

                return false;
            }
        });

    });

</script>
<script type="text/javascript">
    $(".RefreshQuantity").click(function () {
        // Get the id from the link
        var recordToUpdate = $(this).attr("data-id");

        if (typeof String.prototype.trim !== 'function') {
            String.prototype.trim = function () {
                return this.replace(/^\s+|\s+$/g, '');
            }
        }
        //Set quantity number to 0 if input value is empty
        var countToUpdate = 0;
        if ($("#" + $(this).attr("txt-id")).val().trim() !== '') {
            countToUpdate = $("#" + $(this).attr("txt-id")).val();
        }
        //var countToUpdate = $("#" + $(this).attr("txt-id")).val();
        if (recordToUpdate != '') {
            // Perform the ajax post
            $.post("/Cart/UpdateCartCount", { "id": recordToUpdate, "cartCount": countToUpdate },
                function (data) {
                    // Successful requests get here
                    // Update the page elements
                    if (data.ItemCount == 0) {
                        $('#cart-row-' + data.RemoveItemId).fadeOut('slow');
                    }
                    $('#update-message').text(data.Message);
                    //Only process the callback data when no server error occurs
                    if (data.ItemCount != -1) {
                        $('#total-price-value').text(data.CartTotal);
                        $('#cart-header-items-count').text('Cart (' + data.CartItemsCount + ')');
                    }
                });

            return false;
            //function clearUpdateMessage() {
            //    // Reset update-message area
            //    $('#update-message').text('');
            //}
        }
    });
</script>

