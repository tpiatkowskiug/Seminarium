@model LabSystem2.Models.Order

@{
    ViewBag.Title = "Zlecenie cz.2";
}

<head>
    <meta name="viewport" content="width=device-width" />
    <style>
        .field-validation-error {
            color: red;
            font-weight: bold;
        }

        .input-validation-error {
            background: pink;
            border: 1px solid red;
        }
    </style>
</head>
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>

<script type="text/javascript">
    function myFunction(e) {
        var Idcustomer = $(e).val();  //get selected value
        //check whether the selected value is null.
        if (Idcustomer != "") {
            $.ajax({
                type: "Post",
                url: "/Cart/GetCustomer",
                data: { CustomerId: Idcustomer },
                datatype: "json",
                success: function (response) {
                    $("input[name='Email']").val(response);
                },
                error: function (error) {
                    alert(error);
                }
            });
        }
        else {
            $("input[name='Email']").val(""); //clear email
        }
    };
</script>

@{ Html.EnableClientValidation(); }

@using (@Html.BeginForm("Checkout", "Cart"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Dodaj Zlecenie</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CustomerId", null, "-- Wybierz klienta --", htmlAttributes: new { @class = "form-control", @onchange = "myFunction(this)" })
            @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" name="email">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OrderState, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.OrderState, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OrderState, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Payment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Payment, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Payment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmployeeId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("EmployeeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary()

    <hr style="margin-bottom: 50px;" />

    <div class="section-button-container">
        <a class="btn btn-default" href="">Wróć</a>
        <input type="submit" class="btn btn-default" style="" value="Potwierdź" /> @*wysyła dane do akcji checkout kontrolera cart*@
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
